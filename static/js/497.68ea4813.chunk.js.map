{"version":3,"file":"static/js/497.68ea4813.chunk.js","mappings":"oKACA,EAAuB,qBAAvB,EAAmD,qB,8ECAnD,GAAgB,KAAO,qBAAqB,WAAa,4B,0DCa5CA,EAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,MACpC,GAAgDC,EAAAA,EAAAA,kBAAxCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,UAEnCC,EAAAA,EAAAA,YAAU,WACRD,EAASL,KAER,IAEH,IAAMO,GAAWC,EAAAA,EAAAA,QAAyB,MAE1C,EACEC,EAAAA,GAAAA,cAAwBT,GAD1B,eAAOU,EAAP,YAAqBC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,UAAWC,EAAlD,EAAkDA,MAAOC,EAAzD,EAAyDA,UAGnDC,EAAa,mCAAG,WAAOC,GAAP,iFACdP,EAAWV,EAAO,CACtBkB,KAAM,EACNhB,OAAQe,QAAeE,IAHL,2CAAH,sDAObC,EAAiB,mCAAG,8FAClBL,EAAUf,EAAO,CACrBkB,KAAMN,EAAWM,KACjBhB,OAAQA,QAAUiB,IAHI,2CAAH,qDAOjBE,EAAc,mCAAG,WAAOC,GAAP,8EACfL,EAAcK,EAAEC,OAAOC,MAC7BrB,EAAUc,GAFW,SAGfD,EAAcC,GAHC,2CAAH,sDAMdQ,GAAwBC,EAAAA,EAAAA,UAC5B,kBAAMC,GAAAA,CAASN,EAAgB,OAE/B,KAGFf,EAAAA,EAAAA,YAAU,WACJC,EAASqB,UACXrB,EAASqB,QAAQJ,MAAQtB,KAE1B,CAACA,IAEJ,IAAM2B,GAASH,EAAAA,EAAAA,UACb,kBACEZ,GACE,wBAAKA,IACHD,EACF,aACET,EACF,eACE,OACN,CAACU,EAAOV,EAAQS,IAGlB,OACE,iBAAKiB,UAAWC,EAAAA,KAAhB,WACE,SAAC,KAAD,CACEC,SAAUP,EACVK,UAAWC,EAAAA,MACXE,IAAK1B,KAEP,gBAAK2B,GAAInC,EAAQ+B,UAAWC,EAAAA,WAA5B,UACE,SAAC,IAAD,CACEI,WAAYxB,EAAKyB,OACjBC,KAAMjB,EACNkB,SAAS,EACTC,iBAAkBxC,EAClB8B,OAAQA,EACRW,YACE,cAAGC,MAAO,CAAEC,UAAW,UAAvB,UACE,uDARN,SAYG/B,EAAKgC,KAAI,SAACC,GAAD,OACR,cACEC,KAAMD,EAAKE,QACXvB,OAAO,SACPO,UAAWC,EAAAA,KACXgB,IAAI,aAJN,UAOE,SAAC,MAAD,UAAaH,KAFRA,EAAKV,eC3ExB,EAdwB,WACtB,IAAQlC,GAAUgD,EAAAA,EAAAA,MAAVhD,MACR,EAA4BiD,EAAAA,GAAAA,oBAA8BjD,GAAlDW,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAEd,OACE,iBAAKiB,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGlB,GAAY,SAAC,KAAD,IAAaF,GAAO,SAAC,MAAD,UAAcA,IAAW,eAE5D,SAACb,EAAD,CAAaE,MAAOA,EAAQD,OAAO","sources":["webpack://gh-stats/./src/pages/user-details/styles.module.scss?e57e","webpack://gh-stats/./src/features/repos-search/ui/styles.module.scss?01ac","features/repos-search/ui/index.tsx","pages/user-details/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"styles_root__cDLGz\",\"card\":\"styles_card__Ra8B7\"};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"styles_link__Untu8\",\"scrollable\":\"styles_scrollable__yd9sG\"};","import styles from './styles.module.scss';\n\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Input } from 'shared/ui';\nimport debounce from 'lodash.debounce';\nimport { useRepoContext } from 'entities/repo/model';\nimport { repoHooks, RepoRow } from 'entities/repo';\n\ninterface Props {\n  nodeId: string;\n  login: string;\n}\n\nexport const ReposSearch = ({ nodeId, login }: Props) => {\n  const { search, setSearch, isLast, setLogin } = useRepoContext();\n\n  useEffect(() => {\n    setLogin(login);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [fetchRepos, { data, pagination, isLoading, error, fetchNext }] =\n    repoHooks.useFetchRepos(login);\n\n  const fetchSearched = async (searchValue: string) => {\n    await fetchRepos(login, {\n      page: 1,\n      search: searchValue || undefined,\n    });\n  };\n\n  const fetchNextSearched = async () => {\n    await fetchNext(login, {\n      page: pagination.page,\n      search: search || undefined,\n    });\n  };\n\n  const onSearchChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const searchValue = e.target.value;\n    setSearch(searchValue);\n    await fetchSearched(searchValue);\n  };\n\n  const debouncedSearchChange = useMemo(\n    () => debounce(onSearchChange, 600),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.value = search;\n    }\n  }, [search]);\n\n  const loader = useMemo(\n    () =>\n      error ? (\n        <h4>{error}</h4>\n      ) : isLoading ? (\n        'Loading...'\n      ) : isLast ? (\n        'No more data'\n      ) : null,\n    [error, isLast, isLoading]\n  );\n\n  return (\n    <div className={styles.root}>\n      <Input\n        onChange={debouncedSearchChange}\n        className={styles.input}\n        ref={inputRef}\n      />\n      <div id={nodeId} className={styles.scrollable}>\n        <InfiniteScroll\n          dataLength={data.length}\n          next={fetchNextSearched}\n          hasMore={true}\n          scrollableTarget={nodeId}\n          loader={loader}\n          endMessage={\n            <p style={{ textAlign: 'center' }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n          {data.map((repo) => (\n            <a\n              href={repo.htmlUrl}\n              target=\"_blank\"\n              className={styles.link}\n              rel=\"noreferrer\"\n              key={repo.id}\n            >\n              <RepoRow {...repo} />\n            </a>\n          ))}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n};\n","import styles from './styles.module.scss';\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'shared/ui';\nimport { UserCard, userHooks } from 'entities/user';\nimport { ReposSearch } from 'features/repos-search';\n\nconst UserDetailsPage = () => {\n  const { login } = useParams();\n  const { data, isLoading } = userHooks.useFetchUserByLogin(login!);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.card}>\n        {isLoading ? <Loader /> : data ? <UserCard {...data} /> : 'not found'}\n      </div>\n      <ReposSearch login={login!} nodeId=\"repos-search-user-details\" />\n    </div>\n  );\n};\n\nexport default UserDetailsPage;\n"],"names":["ReposSearch","nodeId","login","useRepoContext","search","setSearch","isLast","setLogin","useEffect","inputRef","useRef","repoHooks","fetchRepos","data","pagination","isLoading","error","fetchNext","fetchSearched","searchValue","page","undefined","fetchNextSearched","onSearchChange","e","target","value","debouncedSearchChange","useMemo","debounce","current","loader","className","styles","onChange","ref","id","dataLength","length","next","hasMore","scrollableTarget","endMessage","style","textAlign","map","repo","href","htmlUrl","rel","useParams","userHooks"],"sourceRoot":""}